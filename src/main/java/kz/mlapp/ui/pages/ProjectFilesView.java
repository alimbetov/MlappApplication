package kz.mlapp.ui.pages;

import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.combobox.ComboBox;
import com.vaadin.flow.component.dialog.Dialog;
import com.vaadin.flow.component.grid.Grid;
import com.vaadin.flow.component.html.Image;
import com.vaadin.flow.component.notification.Notification;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.component.textfield.TextField;
import com.vaadin.flow.component.upload.Upload;
import com.vaadin.flow.component.upload.receivers.MemoryBuffer;
import com.vaadin.flow.router.BeforeEnterEvent;
import com.vaadin.flow.router.BeforeEnterObserver;
import com.vaadin.flow.router.PageTitle;
import com.vaadin.flow.router.Route;
import com.vaadin.flow.server.StreamResource;
import com.vaadin.flow.server.VaadinSession;
import jakarta.annotation.security.RolesAllowed;
import kz.mlapp.dto.FileBoxDto;
import kz.mlapp.dto.FileStatusDto;
import kz.mlapp.dto.MlProjectDto;
import kz.mlapp.security.JwtUtil;
import kz.mlapp.service.FileBoxService;
import kz.mlapp.service.FileStatusService;
import kz.mlapp.service.MlProjectService;
import kz.mlapp.services.impls.UserService;
import kz.mlapp.ui.pages.layout.MainLayout;
import kz.mlapp.utils.VaadinMultipartFile;
import org.springframework.data.domain.Page;

import java.io.IOException;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;
import java.util.UUID;
import java.util.concurrent.atomic.AtomicReference;
import java.util.stream.Collectors;

@PageTitle("–§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞")
@Route(value = "project-files/:id", layout = MainLayout.class)
@RolesAllowed("ROLE_ADMIN") // ‚úÖ –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞
public class ProjectFilesView extends VerticalLayout implements BeforeEnterObserver {

    private final FileBoxService fileBoxService;
    private final FileStatusService fileStatusService;
    private final JwtUtil jwtUtil;
    private MlProjectService mlProjectService;


    private UserService userService;

    private Long projectId;  // ID –ø—Ä–æ–µ–∫—Ç–∞
    private Long statusId = 1L; // ‚ùó –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ç–∞—Ç—É—Å = 1 (–º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã)
    private int currentPage = 0;
    private final int pageSize = 10;

    private final Grid<MlProjectDto> projectDtoGrid = new Grid<>(MlProjectDto.class);
    private final Grid<FileBoxDto> fileGrid = new Grid<>(FileBoxDto.class, false);
    private final TextField searchField = new TextField("üîç –ü–æ–∏—Å–∫ –ø–æ —Ñ–∞–π–ª—É");
    private final ComboBox<FileStatusDto> statusComboBox = new ComboBox<>("üìå –°—Ç–∞—Ç—É—Å —Ñ–∞–π–ª–æ–≤");

    public ProjectFilesView(FileBoxService fileBoxService,
                            FileStatusService fileStatusService,
                            MlProjectService mlProjectService,
                            JwtUtil jwtUtil, UserService userService ) {
        this.fileBoxService = fileBoxService;
        this.fileStatusService = fileStatusService;
        this.mlProjectService = mlProjectService;
        this.jwtUtil = jwtUtil;
        this.userService = userService;




        configureGrid(); // ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É
        configureStatusComboBox(); // ‚úÖ –ö–æ–º–±–æ-–±–æ–∫—Å —Å—Ç–∞—Ç—É—Å–æ–≤

        // ‚úÖ –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–ø–∞–≥–∏–Ω–∞—Ü–∏—è)
        Button prevPageButton = new Button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", event -> changePage(-1));
        Button nextPageButton = new Button("–í–ø–µ—Ä—ë–¥ ‚û°Ô∏è", event -> changePage(1));
        prevPageButton.setEnabled(false);
        // ‚úÖ –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª"
        Button addFileButton = new Button("üìÇ –î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª", event -> openFileUploadDialog());

        // ‚úÖ –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞
        searchField.addValueChangeListener(e -> filterFiles());

        // ‚úÖ –°—Ç–∞—Ç—É—Å + –ø–∞–≥–∏–Ω–∞—Ü–∏—è
        HorizontalLayout controls = new HorizontalLayout(statusComboBox, prevPageButton, nextPageButton, searchField, addFileButton);
        add(projectDtoGrid, controls, fileGrid);
    }

    @Override
    public void beforeEnter(BeforeEnterEvent event) {
        String id = event.getRouteParameters().get("id").orElse(null);
        if (id != null) {
            projectId = Long.parseLong(id);
            try {
                MlProjectDto projectDto = mlProjectService.getProjectById(projectId); // ‚úÖ –ü–æ–ª—É—á–∞–µ–º DTO –ø—Ä–æ–µ–∫—Ç–∞
                projectDtoGrid.setItems(List.of(projectDto)); // ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ Grid
                projectDtoGrid.setColumns("id", "model", "description");
                projectDtoGrid.setHeight("100px");
                loadFiles();
            } catch (RuntimeException e) {
                Notification.show("–û—à–∏–±–∫–∞: " + e.getMessage(), 3000, Notification.Position.MIDDLE);
                getUI().ifPresent(ui -> ui.navigate("projects"));
            }
        } else {
            Notification.show("–û—à–∏–±–∫–∞: ID –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!", 3000, Notification.Position.MIDDLE);
            getUI().ifPresent(ui -> ui.navigate("projects"));
        }
    }

    // ‚úÖ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    private void configureGrid() {
        fileGrid.addColumn(FileBoxDto::getFilename).setHeader("üìÑ –ò–º—è —Ñ–∞–π–ª–∞");
        fileGrid.addColumn(FileBoxDto::getDescription).setHeader("üìå –û–ø–∏—Å–∞–Ω–∏–µ");
        fileGrid.addColumn(FileBoxDto::getCreatedAt).setHeader("üìÖ –î–∞—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏");
        fileGrid.addComponentColumn(this::createDeleteButton).setHeader("üóë –£–¥–∞–ª–∏—Ç—å");
    }

    // ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç—É—Å–æ–≤
    private void configureStatusComboBox() {
        List<FileStatusDto> statuses = fileStatusService.getAllStatuses();
        statusComboBox.setItems(statuses);;
        statusComboBox.setItemLabelGenerator(status -> status.getStatus().name());
        statusComboBox.setValue(statuses.stream().findFirst().orElse(null));

        // ‚úÖ –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã
        statusComboBox.addValueChangeListener(event -> {
            if (event.getValue() != null) {
                statusId = event.getValue().getId();
                loadFiles();
            }
        });
    }

    // ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã –ø–æ `projectId` –∏ `statusId`
    private void loadFiles() {
        Page<FileBoxDto> filePage = fileBoxService.getFilesByProjectAndStatus(projectId, statusId, currentPage, pageSize);
        List<FileBoxDto> fileList = filePage.getContent();

        fileGrid.setItems(fileList);
    }

    // ‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    private void filterFiles() {
        String searchTerm = searchField.getValue().trim().toLowerCase();
        Page<FileBoxDto> filePage = fileBoxService.getFilesByProjectAndStatus(projectId, statusId, currentPage, pageSize);
        List<FileBoxDto> filteredFiles = filePage.getContent().stream()
                .filter(file -> file.getFilename().toLowerCase().contains(searchTerm))
                .collect(Collectors.toList());

        fileGrid.setItems(filteredFiles);
    }

    // ‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
    private void changePage(int step) {
        currentPage += step;
        loadFiles();
    }

    // ‚úÖ –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
    private Button createDeleteButton(FileBoxDto fileDto) {
        return new Button("üóë –£–¥–∞–ª–∏—Ç—å", event -> {
            fileBoxService.deleteFile(fileDto.getId());
            Notification.show("–§–∞–π–ª —É–¥–∞–ª—ë–Ω!", 3000, Notification.Position.MIDDLE);
            loadFiles();
        });
    }

    // ‚úÖ –î–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ (–º–æ–∫–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞)


    private void openFileUploadDialog() {
        Dialog dialog = new Dialog();
        dialog.setHeaderTitle("üìÇ –î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª");

        TextField filenameField = new TextField("–ò–º—è —Ñ–∞–π–ª–∞");
        TextField descriptionField = new TextField("–û–ø–∏—Å–∞–Ω–∏–µ");

        // ‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
        MemoryBuffer buffer = new MemoryBuffer();
        Upload upload = new Upload(buffer);
        upload.setAcceptedFileTypes("image/jpeg", "image/jpg", ".dcm"); // ‚ùó –ü–æ–¥–¥–µ—Ä–∂–∫–∞ DICOM + JPEG
        upload.setMaxFiles(1);

        // ‚úÖ –ü–æ–ª–µ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        Image previewImage = new Image();
        previewImage.setMaxWidth("200px");
        previewImage.setVisible(false);

        AtomicReference<String> mimeType = new AtomicReference<>("");

        // ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        String userName = getUserName();
        var userDto = Optional.ofNullable(userService.findUserDtoByEmail(userName))
                .orElseThrow(() -> new RuntimeException("–û—à–∏–±–∫–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!"));

        // ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
        upload.addSucceededListener(event -> {
            filenameField.setValue(event.getFileName()); // –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
            mimeType.set(event.getMIMEType()); // ‚úÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º MIME-—Ç–∏–ø
            String fileName = event.getFileName();

            // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏–ª–∏ DICOM
            if (mimeType.get().startsWith("image")) {
                previewImage.setSrc(new StreamResource(fileName, buffer::getInputStream));
                previewImage.setVisible(true);
            } else if (fileName.endsWith(".dcm")) {
                Notification.show("–§–∞–π–ª DICOM –∑–∞–≥—Ä—É–∂–µ–Ω, –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.", 3000, Notification.Position.MIDDLE);
                previewImage.setVisible(false);
            }
        });

        // ‚úÖ –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        Button saveButton = new Button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å", event -> {
            String filename = filenameField.getValue().trim();
            String description = descriptionField.getValue().trim();

            if (filename.isEmpty()) {
                Notification.show("–û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞!", 3000, Notification.Position.MIDDLE);
                return;
            }

            try {
                // ‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ MultipartFile
                VaadinMultipartFile multipartFile = new VaadinMultipartFile(buffer, mimeType.get());

                // ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π
                String fileKey = UUID.randomUUID().toString();
                String parentKey = "project-" + projectId; // ‚úÖ –¢–µ–ø–µ—Ä—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á

                FileBoxDto newFile = FileBoxDto.builder()
                        .projectId(projectId)
                        .uploadedUserId(userDto.getId())
                        .statusId(statusId)
                        .fileKey(fileKey)
                        .parentKey(parentKey)
                        .filename(filename)
                        .description(description)
                        .fileType(multipartFile.getContentType())
                        .fileSize(multipartFile.getSize())
                        .createdAt(LocalDateTime.now())
                        .build();

                fileBoxService.saveFile(newFile, multipartFile);
                loadFiles();
                dialog.close();
                Notification.show("–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω!", 3000, Notification.Position.MIDDLE);
            } catch (IOException e) {
                Notification.show("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: " + e.getMessage(), 3000, Notification.Position.MIDDLE);
            }
        });

        Button cancelButton = new Button("–û—Ç–º–µ–Ω–∞", event -> dialog.close());

        dialog.add(new VerticalLayout(
                upload, previewImage, filenameField, descriptionField,
                new HorizontalLayout(saveButton, cancelButton)
        ));
        dialog.open();
    }

    private String getUserName() {
        String token = (String) VaadinSession.getCurrent().getAttribute("JWT_TOKEN");
        return  jwtUtil.getUsername(token);
    }
}
